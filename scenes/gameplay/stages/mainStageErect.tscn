[gd_scene load_steps=19 format=3 uid="uid://cys3l578mwdyu"]

[ext_resource type="Script" path="res://scenes/gameplay/stages/mainStageErect.gd" id="1_8vwlo"]
[ext_resource type="Texture2D" uid="uid://13co4svlbwp7" path="res://assets/images/gameplay/stages/stage/erect/backDark.png" id="2_c0nuu"]
[ext_resource type="Texture2D" uid="uid://c0gqg8l826fpo" path="res://assets/images/gameplay/stages/stage/erect/brightLightSmall.png" id="3_g7dt4"]
[ext_resource type="SpriteFrames" uid="uid://blohjvh5eb7yb" path="res://assets/images/gameplay/stages/stage/erect/crowd.res" id="4_1df25"]
[ext_resource type="Script" path="res://classes/AnimatedSprite.gd" id="5_mp3ss"]
[ext_resource type="Texture2D" uid="uid://bqdjfj37c6vh3" path="res://assets/images/gameplay/stages/stage/erect/bg.png" id="5_sjrhj"]
[ext_resource type="Texture2D" uid="uid://gvoekae7mfx4" path="res://assets/images/gameplay/stages/stage/erect/lightgreen.png" id="6_bg7vw"]
[ext_resource type="Texture2D" uid="uid://djq6fg3no24y3" path="res://assets/images/gameplay/stages/stage/erect/server.png" id="6_l8k6e"]
[ext_resource type="Texture2D" uid="uid://cxhpufjyw50x1" path="res://assets/images/gameplay/stages/stage/erect/lightred.png" id="7_tcvtv"]
[ext_resource type="Texture2D" uid="uid://ddxd6dxaf0my6" path="res://assets/images/gameplay/stages/stage/erect/orangeLight.png" id="7_u1rit"]
[ext_resource type="Texture2D" uid="uid://cg7ejpd2kqrb8" path="res://assets/images/gameplay/stages/stage/erect/lightAbove.png" id="8_47pi4"]
[ext_resource type="Texture2D" uid="uid://5lb7egg1sxc0" path="res://assets/images/gameplay/stages/stage/erect/lights.png" id="8_ckeox"]

[sub_resource type="Shader" id="Shader_iyga8"]
code = "shader_type canvas_item;

uniform float hue : hint_range(-360.0, 360.0) = 0.0;          // Hue from -360 to 360
uniform float saturation : hint_range(0.0, 100.0) = 100.0;    // Saturation from 0 to 100
uniform float brightness : hint_range(-100.0, 100.0) = 0.0;   // Brightness from -100 to 100
uniform float contrast : hint_range(-100.0, 100.0) = 0.0;     // Contrast from -100 to 100

vec3 rgb_to_hsv(vec3 color) {
	vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 p = mix(vec4(color.bg, K.wz), vec4(color.gb, K.xy), step(color.b, color.g));
	vec4 q = mix(vec4(p.xyw, color.r), vec4(color.r, p.yzx), step(p.x, color.r));

	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv_to_rgb(vec3 hsv) {
	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 p = abs(fract(hsv.xxx + K.xyz) * 6.0 - K.www);
	return hsv.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsv.y);
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);

	// Convert to HSV for hue and saturation adjustments
	vec3 hsv = rgb_to_hsv(color.rgb);
	hsv.x += hue / 360.0;  // Normalize hue to 0-1 range
	hsv.y = clamp(hsv.y * (saturation / 100.0), 0.0, 1.0);  // Adjust saturation (0-100 to 0-1)
	color.rgb = hsv_to_rgb(hsv);

	// Brightness adjustment (simplified)
	color.rgb += brightness / 100.0;  // Add brightness

	// Contrast adjustment
	// - Contrast from -100 to 100 is mapped to a multiplier where 0 = no change.
	// - Values below 0 compress the range, and values above 0 expand it.
	float contrast_factor = (1.0 + contrast / 100.0);
	color.rgb = (color.rgb - 1.0) * contrast_factor + 1.0;  // Center around 0.5 and scale by contrast factor

	// Output the final color
	COLOR = color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_38nbo"]
shader = SubResource("Shader_iyga8")
shader_parameter/hue = -32.0
shader_parameter/saturation = 100.0
shader_parameter/brightness = -33.0
shader_parameter/contrast = -23.0

[sub_resource type="Shader" id="Shader_pnd5q"]
code = "shader_type canvas_item;

uniform float hue : hint_range(-360.0, 360.0) = 0.0;          // Hue from -360 to 360
uniform float saturation : hint_range(0.0, 100.0) = 100.0;    // Saturation from 0 to 100
uniform float brightness : hint_range(-100.0, 100.0) = 0.0;   // Brightness from -100 to 100
uniform float contrast : hint_range(-100.0, 100.0) = 0.0;     // Contrast from -100 to 100

vec3 rgb_to_hsv(vec3 color) {
	vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 p = mix(vec4(color.bg, K.wz), vec4(color.gb, K.xy), step(color.b, color.g));
	vec4 q = mix(vec4(p.xyw, color.r), vec4(color.r, p.yzx), step(p.x, color.r));

	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv_to_rgb(vec3 hsv) {
	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 p = abs(fract(hsv.xxx + K.xyz) * 6.0 - K.www);
	return hsv.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsv.y);
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);

	// Convert to HSV for hue and saturation adjustments
	vec3 hsv = rgb_to_hsv(color.rgb);
	hsv.x += hue / 360.0;  // Normalize hue to 0-1 range
	hsv.y = clamp(hsv.y * (saturation / 100.0), 0.0, 1.0);  // Adjust saturation (0-100 to 0-1)
	color.rgb = hsv_to_rgb(hsv);

	// Brightness adjustment (simplified)
	color.rgb += brightness / 100.0;  // Add brightness

	// Contrast adjustment
	// - Contrast from -100 to 100 is mapped to a multiplier where 0 = no change.
	// - Values below 0 compress the range, and values above 0 expand it.
	float contrast_factor = (1.0 + contrast / 100.0);
	color.rgb = (color.rgb - 1.0) * contrast_factor + 1.0;  // Center around 0.5 and scale by contrast factor

	// Output the final color
	COLOR = color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_l7xsd"]
shader = SubResource("Shader_pnd5q")
shader_parameter/hue = -8.99998
shader_parameter/saturation = 100.0
shader_parameter/brightness = -30.0
shader_parameter/contrast = -16.0

[sub_resource type="Shader" id="Shader_yt403"]
code = "shader_type canvas_item;

uniform float hue : hint_range(-360.0, 360.0) = 0.0;          // Hue from -360 to 360
uniform float saturation : hint_range(0.0, 100.0) = 100.0;    // Saturation from 0 to 100
uniform float brightness : hint_range(-100.0, 100.0) = 0.0;   // Brightness from -100 to 100
uniform float contrast : hint_range(-100.0, 100.0) = 0.0;     // Contrast from -100 to 100

vec3 rgb_to_hsv(vec3 color) {
	vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 p = mix(vec4(color.bg, K.wz), vec4(color.gb, K.xy), step(color.b, color.g));
	vec4 q = mix(vec4(p.xyw, color.r), vec4(color.r, p.yzx), step(p.x, color.r));

	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv_to_rgb(vec3 hsv) {
	vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 p = abs(fract(hsv.xxx + K.xyz) * 6.0 - K.www);
	return hsv.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), hsv.y);
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);

	// Convert to HSV for hue and saturation adjustments
	vec3 hsv = rgb_to_hsv(color.rgb);
	hsv.x += hue / 360.0;  // Normalize hue to 0-1 range
	hsv.y = clamp(hsv.y * (saturation / 100.0), 0.0, 1.0);  // Adjust saturation (0-100 to 0-1)
	color.rgb = hsv_to_rgb(hsv);

	// Brightness adjustment (simplified)
	color.rgb += brightness / 100.0;  // Add brightness

	// Contrast adjustment
	// - Contrast from -100 to 100 is mapped to a multiplier where 0 = no change.
	// - Values below 0 compress the range, and values above 0 expand it.
	float contrast_factor = (1.0 + contrast / 100.0);
	color.rgb = (color.rgb - 1.0) * contrast_factor + 1.0;  // Center around 0.5 and scale by contrast factor

	// Output the final color
	COLOR = color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qeucr"]
shader = SubResource("Shader_yt403")
shader_parameter/hue = 12.0
shader_parameter/saturation = 100.0
shader_parameter/brightness = -23.0
shader_parameter/contrast = 7.00001

[node name="mainStageErect" type="Node2D"]
script = ExtResource("1_8vwlo")
default_cam_zoom = 0.85
player_cam_offset = Vector2(0, -20)

[node name="PB" type="ParallaxBackground" parent="."]

[node name="PL1" type="ParallaxLayer" parent="PB"]

[node name="backDark" type="Sprite2D" parent="PB/PL1"]
position = Vector2(729, -170)
texture = ExtResource("2_c0nuu")
centered = false

[node name="bg" type="Sprite2D" parent="PB/PL1"]
z_index = 20
position = Vector2(-603, -187)
texture = ExtResource("5_sjrhj")
centered = false

[node name="server" type="Sprite2D" parent="PB/PL1"]
z_index = 30
position = Vector2(-361, 205)
texture = ExtResource("6_l8k6e")
centered = false

[node name="orangeLightt" type="Sprite2D" parent="PB/PL1"]
z_index = 80
position = Vector2(189, -195)
texture = ExtResource("7_u1rit")
centered = false

[node name="lightgreen" type="PointLight2D" parent="PB/PL1"]
z_index = 40
position = Vector2(-82, 336)
color = Color(0.206266, 0.550781, 0.120785, 1)
energy = 16.0
range_z_max = 30
range_layer_min = -100
texture = ExtResource("6_bg7vw")

[node name="lightred" type="PointLight2D" parent="PB/PL1"]
z_index = 40
position = Vector2(-11.5, 651)
color = Color(0.976471, 0.227451, 0.247059, 1)
energy = 16.0
range_z_max = 30
range_layer_min = -165
texture = ExtResource("7_tcvtv")

[node name="lightAbove" type="PointLight2D" parent="PB/PL1"]
z_index = 4096
position = Vector2(1234, 256)
color = Color(1, 0.937255, 0.596078, 1)
energy = 4.0
range_layer_min = -100
range_layer_max = 100
texture = ExtResource("8_47pi4")

[node name="PL2" type="ParallaxLayer" parent="PB"]
motion_scale = Vector2(1.2, 1.2)

[node name="brightLightSmall" type="PointLight2D" parent="PB/PL2"]
z_index = 10
position = Vector2(1310.5, 216)
color = Color(0.992157, 0.992157, 0.701961, 1)
energy = 4.0
range_z_max = 10
range_layer_min = -100
texture = ExtResource("3_g7dt4")

[node name="lights" type="Sprite2D" parent="PB/PL2"]
z_index = 4000
position = Vector2(-601, -147)
texture = ExtResource("8_ckeox")
centered = false

[node name="PL3" type="ParallaxLayer" parent="PB"]
motion_scale = Vector2(0.8, 0.8)

[node name="crowd" type="AnimatedSprite2D" parent="PB/PL3"]
z_index = 5
position = Vector2(560, 290)
sprite_frames = ExtResource("4_1df25")
animation = &"Symbol 2 instance 1"
frame = 6
frame_progress = 0.204749
centered = false
script = ExtResource("5_mp3ss")

[node name="Character Positions" type="Node2D" parent="."]
metadata/_edit_lock_ = true

[node name="Opponent" type="Node2D" parent="Character Positions"]
z_index = 200
material = SubResource("ShaderMaterial_38nbo")
position = Vector2(40, 850)

[node name="Spectator" type="Node2D" parent="Character Positions"]
z_index = 100
material = SubResource("ShaderMaterial_l7xsd")
position = Vector2(501.5, 825)

[node name="Player" type="Node2D" parent="Character Positions"]
z_index = 300
material = SubResource("ShaderMaterial_qeucr")
position = Vector2(977.5, 865)
